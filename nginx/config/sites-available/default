upstream uwsgi {
    server unix:/backend/app.sock;
}

# HTTP to HTTPS redirect forcely TLS
#server {
#    listen 80;
#    listen [::]:80;
#    if ($http_x_forwarded_proto = 'http') {
#        return 301 https://$host$request_uri?;
#    }
#}

# Default server configuration
#
server {
    listen 80 default_server;
    listen [::]:80 default_server ipv6only=on;
    charset utf-8;

    # SSL configuration TLS
    listen 443 ssl http2 default_server;
    listen [::]:443 ssl http2 default_server ipv6only=on; #

    # Note: You should disable gzip for SSL traffic.
    # Read up on ssl_ciphers to ensure a secure configuration.
    # See: https://bugs.debian.org/765782 #
    # Self signed certs generated by the ssl-cert package
    # Don't use them in a production server!
    #
    # include snippets/snakeoil.conf;

    #root /backend;
    keepalive_timeout 5;

    # Add index.php to the list if you are using PHP index index.html index.htm;
    server_name _;

    #include /etc/nginx/whitelist.conf;

    location / {
        limit_except GET POST PUT PATCH DELETE {
            deny all;
        }
        #include /etc/nginx/cors;

        # First attempt to serve request as file, then
        # as directory, then fall back to displaying a 404.

        #try_files $uri $uri/ /;

        #uwsgi_pass uwsgi;

        proxy_pass http://10.0.0.5:8080;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_redirect off;

        #include /backend/uwsgi_params;
        proxy_set_header REMOTE_ADDR $remote_addr;
    }

    #location /static/ {
    #    alias /backend/.static/;
    #}

    # pass PHP scripts to FastCGI server #
    # location ~ \.php$ {
    #     include snippets/fastcgi-php.conf;
    #
    #     # With php-fpm (or other unix sockets):
    #     fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
    #     # With php-cgi (or other tcp sockets):
    #     fastcgi_pass 127.0.0.1:9000;
    # }

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    location ~ /\.ht {
        deny all;
    }
    location ~ /\.well-known {
        allow all;
        access_log off;
        log_not_found off;
    }
    if ($badagent) {
        return 403;
    }
}
